package com.company;
class BinaryTree {
    Node root;
    int idx = -1;

    class Node {
        int data;
        Node left;
        Node right;

        public Node(int data) {
            this.data = data;
        }
    }

    public Node BuildTree(int[] Nodes) {
        idx++;
        if (Nodes[idx] == -1)
            return null;
        Node newNode = new Node(Nodes[idx]);
        newNode.left = BuildTree(Nodes);
        newNode.right = BuildTree(Nodes);
        return newNode;
    }
    public void preorder(Node root)//Root,Left subtree,right subtree
     {
        if (root==null)
            return;
        System.out.print(root.data + " ");
        preorder(root.left);
        preorder(root.right);
    }
    public void inorder(Node root)// left , root , right
    {
        if(root==null)
            return;
        inorder(root.left);
        System.out.print(root.data+" ");
        inorder(root.right);
    }
    public void postorder(Node root) // left , right , root
    {
        if(root==null)
            return;
        postorder(root.left);
        postorder(root.right);
        System.out.print(root.data+" ");

    }

    public static void main(String[] args) {
        int Nodes[] = {1, 2, 4, -1, -1, 5, -1, -1, 3, -1, 6, -1, -1};
        BinaryTree bt = new BinaryTree();
        Node root=bt.BuildTree(Nodes);
        bt.postorder(root);

    }
}
